<Window x:Class="DesktopSbS.View.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DesktopSbS.View"
        xmlns:conv="clr-namespace:DesktopSbS.Converters"
        mc:Ignorable="d"
        Title="DesktopSbS Settings" Height="600" Width="600" MinWidth="480" MinHeight="480"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style TargetType="GroupBox">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="ScrollViewer">
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5 0"/>
            <Setter Property="Padding" Value="10 4"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="5 0"/>
        </Style>

    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="CloseCommandHandler"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <GroupBox Grid.ColumnSpan="2" Header="Screens">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid Margin="5" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" >
                    <Viewbox Margin="20" >
                        <ListView ItemsSource="{Binding AllScreens}"
                      Background="Transparent"
                      BorderThickness="0"
                      Width="{Binding AllScreensBounds.Width}" 
                      Height="{Binding AllScreensBounds.Height}">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas Background="Transparent"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Width="{Binding Item2.Bounds.Width}"
                                              Height="{Binding Item2.Bounds.Height}">
                                        <Border Margin="10" 
                                                    Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                                    BorderBrush="Black" 
                                                    BorderThickness="10"
                                                 Tag="{Binding RelativeSource={RelativeSource AncestorType=local:SettingsWindow}}">
                                            <Border.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Set as source screen" 
                                                              Command="{Binding PlacementTarget.Tag.CmdSetScreenSource, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                                              CommandParameter="{Binding Item1}"/>
                                                    <MenuItem Header="Set as destination screen"
                                                              Command="{Binding PlacementTarget.Tag.CmdSetScreenDestination, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                                              CommandParameter="{Binding Item1}"/>

                                                </ContextMenu>
                                            </Border.ContextMenu>
                                            <Viewbox>
                                                <TextBlock Text="{Binding Item1}"/>
                                            </Viewbox>
                                        </Border>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListViewItem">
                                                <ContentPresenter/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Canvas.Left">
                                        <Setter.Value>
                                            <MultiBinding Converter="{conv:DoubleOperation}" ConverterParameter="substract">
                                                <Binding Path="Item2.Bounds.Left"/>
                                                <Binding Path="AllScreensBounds.Left" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Canvas.Top">
                                        <Setter.Value>
                                            <MultiBinding Converter="{conv:DoubleOperation}" ConverterParameter="substract">
                                                <Binding Path="Item2.Bounds.Top"/>
                                                <Binding Path="AllScreensBounds.Top" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>

                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger >
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsMouseOver" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </MultiTrigger>
                                        <MultiTrigger >
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsMouseOver" Value="true"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
                                        </MultiTrigger>
                                        <MultiTrigger >
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="false"/>
                                                <Condition Property="IsMouseOver" Value="true"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                        </MultiTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Viewbox>
                </Grid>
                <Grid Grid.Column="1" Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="ComboBox">
                            <Setter Property="Width" Value="40"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Width" Value="40"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                        </Style>

                        <Style TargetType="CheckBox">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="5 0"/>
                        </Style>
                    </Grid.Resources>

                    <TextBlock Grid.Row="0" Grid.ColumnSpan="3" Text="Screen source Id :"/>
                    <ComboBox Grid.Row="0" Grid.Column="3" ItemsSource="{Binding AllScreens}" SelectedValuePath="Item1" DisplayMemberPath="Item1" SelectedValue="{Binding ScreenSourceId}"/>

                    <TextBlock Grid.Row="1" Grid.ColumnSpan="3" Text="Screen destination Id :"/>
                    <ComboBox Grid.Row="1" Grid.Column="3" ItemsSource="{Binding AllScreens}" SelectedValuePath="Item1" DisplayMemberPath="Item1" SelectedValue="{Binding ScreenDestinationId}"/>

                    <CheckBox Grid.Row="2" Grid.ColumnSpan="4" Content="Auto compute screen scale" IsChecked="{Binding IsScreenScaleAuto}" IsThreeState="False"/>
                    <TextBlock Grid.Row="3" Grid.ColumnSpan="3" Text="Screen scale (%) :"/>
                    <TextBox Grid.Row="3" Grid.Column="3" Text="{Binding ScreenScalePerCent}"  IsEnabled="{Binding IsScreenScaleAuto,Converter={conv:NotBool}}"/>

                    <CheckBox Grid.Row="4" Grid.ColumnSpan="4" Content="Source area fullscreen" IsChecked="{Binding IsSourceFullScreen}" IsThreeState="False"/>
                    <TextBlock Grid.Row="5" Grid.Column="0" Text="Left :"/>
                    <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding AreaLeft}" IsEnabled="{Binding IsSourceFullScreen,Converter={conv:NotBool}}"/>
                    <TextBlock Grid.Row="5" Grid.Column="2" Text="Top :"/>
                    <TextBox Grid.Row="5" Grid.Column="3" Text="{Binding AreaTop}" IsEnabled="{Binding IsSourceFullScreen,Converter={conv:NotBool}}"/>
                    <TextBlock Grid.Row="6" Grid.Column="0" Text="Width :"/>
                    <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding AreaWidth}"  IsEnabled="{Binding IsSourceFullScreen,Converter={conv:NotBool}}"/>
                    <TextBlock Grid.Row="6" Grid.Column="2" Text="Height :"/>
                    <TextBox Grid.Row="6" Grid.Column="3" Text="{Binding AreaHeight}" IsEnabled="{Binding IsSourceFullScreen,Converter={conv:NotBool}}"/>
                </Grid>
            </Grid>
        </GroupBox>
        <GroupBox Grid.Row="1" Header="Keyboard shortcuts" >
            <ScrollViewer>
                <ItemsControl ItemsSource="{Binding KeyboardShortcuts}" Grid.IsSharedSizeScope="True"  FocusVisualStyle="{x:Null}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid Margin="0 3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" SharedSizeGroup="ActionCol"/>
                                        <ColumnDefinition Width="auto" SharedSizeGroup="ModifiersCol"/>
                                        <ColumnDefinition Width="auto" SharedSizeGroup="KeyCol"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding Item3}"  Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5 0 0 0" />
                                    <Button Grid.Column="1"  Content="{Binding Item1}" 
                                    Command="{Binding CmdEditShortcut, RelativeSource={RelativeSource AncestorType=local:SettingsWindow}}" CommandParameter="{Binding}"/>
                                    <Button Grid.Column="2"  Content="{Binding Item2}" 
                                    Command="{Binding CmdEditShortcut, RelativeSource={RelativeSource AncestorType=local:SettingsWindow}}" CommandParameter="{Binding}"/>
                                </Grid>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Value="true">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{conv:AreEqual}">
                                                        <Binding Path="EditedKeyboardShortcut" RelativeSource="{RelativeSource AncestorType=local:SettingsWindow}"/>
                                                        <Binding/>
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </GroupBox>
        <GroupBox Grid.Row="1" Grid.Column="1" Header="Excluded applications">
            <ScrollViewer>
                <StackPanel>
                    <ItemsControl ItemsSource="{Binding ExcludedApplications}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0 3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto" SharedSizeGroup="btnDelCol"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" VerticalAlignment="Stretch"  HorizontalAlignment="Stretch" VerticalContentAlignment="Center" Margin="5 0"/>
                                    <Button Grid.Column="1"  Content=" - " 
                                    Command="{Binding CmdRemoveApplication, RelativeSource={RelativeSource AncestorType=local:SettingsWindow}}" CommandParameter="{Binding}"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Button Content=" + " Command="{Binding CmdAddApplication, RelativeSource={RelativeSource AncestorType=local:SettingsWindow}}" Margin="5 3"/>
                </StackPanel>
            </ScrollViewer>
        </GroupBox>
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="Padding" Value="10 5"/>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Reset default shortcuts" Command="{Binding CmdResetShortcuts}"/>
            <Button Grid.Column="2" Content="Save &amp; Close" Command="{Binding CmdSaveClose}"/>
            <Button Grid.Column="3" Content="Cancel" Command="{Binding CmdCancel}"/>
        </Grid>
    </Grid>
</Window>
